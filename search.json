[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Métodos Numéricos y Probabilidades 2025",
    "section": "",
    "text": "Motivación\nLas (los) físicas (os) siempre han llevado la punta de lanza del desarrollo tecnológico. Desde la revolución industrial hasta el desarrollo de la computación cuántica, los (las) físicos (as) han tenido un manejo profundo de la tecnología que les permite hacer nuevos descubrimientos o inventos. Esto es aún más cierto en el siglo XXI, en el cual la mayoría de las (los) licenciadas (os) en física de los países de alto desarrollo tecnológico trabajan en el sector privado creando y mejorando las herramientas informáticas, financieras y estadísticas que usamos todos los días. Esto se debe a que a lo largo de sus carreras adquieren un conocimiento íntimo de la tecnología de punta al intentar aplicarla a problemas científicos abiertos.\nSon muy pocos los problemas que admiten una solución sencilla de lápiz y papel. Para la mayoría de nuevos desarrollos es necesario usar el computador. Esto es verdad tanto para analizar los datos obtenidos en los experimentos, como para resolver las ecuaciones diferenciales que aparecen en la física teórica. Incluso quienes hacen un trabajo puramente analítico se apoyan en herramientas computacionales para los cálculos que son cada vez más complejos.\nEn este curso aprenderemos a usar las herramientas numéricas disponibles para atacar problemas físicos y al hacerlo aprenderemos a usar plataformas, paquetes y lenguajes de programación modernos.\n\n\nLecturas Sugeridas\n\nR. L. Burden, D. J. Faires, A. M. Burden, “Numerical Analysis”, 10ma edición, Cengage Learning, 2016 (NA)\nT. A. Driscoll, R. J. Braun, “Funamentals of Numerical Computation”, 2da edición, SIAM, 2022 (FNC)\nB. R. Martin, “Statistics for Physical Sciences”. Elsevier, 2012 (S)\nA. B. Downey, “Think Python,” 2da edición, O’Reilly, 2015. (TP)\n\n\n\nPrograma\nSe indican las fechas y temas de cada clase, junto con las secciones de los libros a las que corresponden.\n1- Introducción\n\n¿Cómo funciona una CPU?, 7 de agosto.\nRepaso de Python, 12 de agosto.\nNumpy y arrays, 14 de agosto.\nRepresentación binaria de números decimales, número de condicionamiento 19 de agosto\nAlgoritmos y estabilidad 21 de agosto\n\n2- Probabilidades\n\nPropiedades básicas de la probabilidad, 26 de agosto\nDistribuciones de probabilidad, 28 de agosto\nVarias variables aleatorias, 2 de septiembre\nSuma de muchas variables aleatorias y teorema central del límite, 4 de septiembre\nInformación y entropía, 9 de septiembre\n\nPrueba: 23 de septiembre\n3- Cálculo numérico\n\nSolución de sistemas de ecuaciones lineales: Inversión de matrices, 11 de septiembre\nBúsqueda de raíces: Métodos de bisección y Newton, 25 de septiembre\nInterpolación, 30 de septiembre\nDerivadas numéricas y autodiferenciación, 2 de octubre\nIntegración numérica simple y adaptativa, 7 de octubre\nIntegración numérica por método de Gauss, 9 de octubre\n\nPrueba: 16 de octubre\n4- Solución numérica de ecuaciones diferenciales ordinarias\n\nMétodos de Euler y Taylor, 14 de octubre\nMétodo de Runge Kutta, 21 de octubre\nMétodo de Runge Kutta adaptativo, 23 de octubre\nMétodos de múltiples pasos y método de Adams, 4 de noviembre\nSistemas de ecuaciones diferenciales y ecuaciones de alto orden, 6 de noviembre\n\nPrueba: 13 de noviembre\n5- Optimización y otros algoritmos importantes\n\nAjuste de curvas y bondad de ajuste, 11 de noviembre\nOptimización por descenso de gradiente, 18 de noviembre\nIntroducción a las redes neuronales, 20 de noviembre\nMétodos de Monte Carlo y/o transformada rápida de Fourier, 25 de noviembre\n\nRecuperativa: 27 de noviembre Examen: Definido por Instituto\n\n\nEvaluación\nLa evaluación se hará por tareas y pruebas.\nAl final de cada clase habrán 5 tareas para un total de 10 tareas cada dos clases. De estas 10 tareas se le asignará de forma aleatoria una tarea a cada estudiante. De esta manera el estudiante deberá entregar aproximadamente 11 tareas a lo largo del curso. El 50% de la nota final es el promedio de las notas de las tareas.\nLas tareas se entregan dos clases después de haber sido asignadas.\nSe evaluará lo siguiente:\nEl código funciona (4 puntos): Si el código pedido hace lo que deberíacumplir sin errores en ningún caso, la estudiante obtendrá los 4 puntos. Si existen casos especiales en los cuales el código no funciona, pero funciona en la mayoría de los casos, la estudiante obtendrá 3 puntos. Si el código no funciona pero el error es menor (algún detalle de sintaxis, alguna variable mal nombrada, alguna excepción de Python difícil de prever), el estudiante obtendrá 2 puntos. Si el código no funciona el estudiante obtendrá 1 punto. Si no entrega la tarea el estudiante obtendrá 0 puntos.\nEl código es legible (+2 puntos): Si el código está comentado en cada paso el estudiante obtendrá +1 punto. Si el código es fácil de entender, está bien organizado, las variables tienen nombres que corresponden a lo que representan la estudiante obtendrá +1 punto.\nLa nota de la tarea = # de puntos + 1.\nLa otra mitad de la nota será el promedio de tres pruebas realizadas a lo largo del semestre. Las pruebas consisten en ejercicios sencillos basados en lo visto en clase y en las tareas.\nLas siguientes son las fechas de las pruebas:\nPrueba: 10 de septiembre Prueba: 5 de noviembre Prueba: 25 de noviembre Recuperativa: 26 de noviembre Examen: 10 de diciembre\n\n\nNormas\nLos estudiantes no están obligados a ir a las ayudantías, pero obviamente quien asista estará mejor preparado para las pruebas y los exámenes porque sabrá cuáles son los problemas que entran. Las tareas se entregarán en formato electrónico por medio de la plataforma GitHub. Se usa esta en vez del Aula Virtual dado su uso extenso en el mundo profesional.\nHágale preguntas al profesor a la dirección jorge.norena@pucv.cl, o en el horario de atención. Hacer preguntas ayuda a aprender y hace más ameno el trabajo del profesor. La clase empieza puntual si hay al menos un estudiante presente, por respeto a los que llegan a tiempo.\n\n\nRecomendaciones\nPOR FAVOR HAGAN PREGUNTAS DURANTE LA CLASE, LAS AYUDANTÍAS, POR CORREO ELECTRÓNICO, EN LOS HORARIOS DE ATENCIÓN Y POR CUALQUIER OTRO MEDIO QUE PUEDA.\nSi quiere conversar hágalo por chat en su teléfono para que el ruido no distraiga a los demás. Use el teléfono para tomarle fotos a la pizarra cuando quiera recordar algo.\n\n\nHorarios de atención y contacto\nPuede en cualquier momento hacer preguntas por correo electrónico.\nCorreo electrónico profesor: jorge.norena@pucv.cl Correo electrónico de la ayudante:\nTambién puede pasar por la oficina del profesor en cualquier momento.\nEl horario de atención reservado es una hora después de cada clase."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "Acerca de este sitio",
    "section": "",
    "text": "Versión: 0.0.1 (trabajo en progreso)\nEstas son las notas de clases del curso de Métodos Numéricos y Probabilidades 2025. El curso es parte del plan de estudios de la licenciatura en física de la Pontificia Universidad Católica de Valparaíso, Chile. Dictado por el profesor Jorge Noreña, el curso cubre temas fundamentales de métodos numéricos y probabilidad aplicados a la física.\nUna pequeña parte de estos apuntes fue escrita con la ayuda de inteligencia artificial, revisado y corregido por el profesor."
  },
  {
    "objectID": "plan.html",
    "href": "plan.html",
    "title": "Métodos Numéricos y Probabilidades",
    "section": "",
    "text": "Las (los) físicas (os) siempre han llevado la punta de lanza del desarrollo tecnológico. Desde la revolución industrial hasta el desarrollo de la computación cuántica, los (las) físicos (as) han tenido un manejo profundo de la tecnología que les permite hacer nuevos descubrimientos o inventos. Esto es aún más cierto en el siglo XXI, en el cual la mayoría de las (los) licenciadas (os) en física de los países de alto desarrollo tecnológico trabajan en el sector privado creando y mejorando las herramientas informáticas, financieras y estadísticas que usamos todos los días. Esto se debe a que a lo largo de sus carreras adquieren un conocimiento íntimo de la tecnología de punta al intentar aplicarla a problemas científicos abiertos.\nSon muy pocos los problemas que admiten una solución sencilla de lápiz y papel. Para la mayoría de nuevos desarrollos es necesario usar el computador. Esto es verdad tanto para analizar los datos obtenidos en los experimentos, como para resolver las ecuaciones diferenciales que aparecen en la física teórica. Incluso quienes hacen un trabajo puramente analítico se apoyan en herramientas computacionales para los cálculos que son cada vez más complejos.\nEn este curso aprenderemos a usar las herramientas numéricas disponibles para atacar problemas físicos y al hacerlo aprenderemos a usar plataformas, paquetes y lenguajes de programación modernos.\n\n\n\n\nR. L. Burden, D. J. Faires, A. M. Burden, “Numerical Analysis”, 10ma edición, Cengage Learning, 2016 (NA)\nT. A. Driscoll, R. J. Braun, “Funamentals of Numerical Computation”, 2da edición, SIAM, 2022 (FNC)\nB. R. Martin, “Statistics for Physical Sciences”. Elsevier, 2012 (S)\nA. B. Downey, “Think Python,” 2da edición, O’Reilly, 2015. (TP)\n\n\n\n\nSe indican las fechas y temas de cada clase, junto con las secciones de los libros a las que corresponden.\n1- Introducción\n\n¿Cómo funciona una CPU?, 7 de agosto.\nRepaso de Python, 12 de agosto.\nNumpy y arrays, 14 de agosto.\nRepresentación binaria de números decimales, número de condicionamiento 19 de agosto\nAlgoritmos y estabilidad 21 de agosto\n\n2- Probabilidades\n\nPropiedades básicas de la probabilidad, 26 de agosto\nDistribuciones de probabilidad, 28 de agosto\nVarias variables aleatorias, 2 de septiembre\nSuma de muchas variables aleatorias y teorema central del límite, 4 de septiembre\nInformación y entropía, 9 de septiembre\n\nPrueba: 23 de septiembre\n3- Cálculo numérico\n\nSolución de sistemas de ecuaciones lineales: Inversión de matrices, 11 de septiembre\nBúsqueda de raíces: Métodos de bisección y Newton, 25 de septiembre\nInterpolación, 30 de septiembre\nDerivadas numéricas y autodiferenciación, 2 de octubre\nIntegración numérica simple y adaptativa, 7 de octubre\nIntegración numérica por método de Gauss, 9 de octubre\n\nPrueba: 16 de octubre\n4- Solución numérica de ecuaciones diferenciales ordinarias\n\nMétodos de Euler y Taylor, 14 de octubre\nMétodo de Runge Kutta, 21 de octubre\nMétodo de Runge Kutta adaptativo, 23 de octubre\nMétodos de múltiples pasos y método de Adams, 4 de noviembre\nSistemas de ecuaciones diferenciales y ecuaciones de alto orden, 6 de noviembre\n\nPrueba: 13 de noviembre\n5- Optimización y otros algoritmos importantes\n\nAjuste de curvas y bondad de ajuste, 11 de noviembre\nOptimización por descenso de gradiente, 18 de noviembre\nIntroducción a las redes neuronales, 20 de noviembre\nMétodos de Monte Carlo y/o transformada rápida de Fourier, 25 de noviembre\n\nRecuperativa: 27 de noviembre Examen: Definido por Instituto\n\n\n\nLa evaluación se hará por tareas y pruebas.\nAl final de cada clase habrán 5 tareas para un total de 10 tareas cada dos clases. De estas 10 tareas se le asignará de forma aleatoria una tarea a cada estudiante. De esta manera el estudiante deberá entregar aproximadamente 11 tareas a lo largo del curso. El 50% de la nota final es el promedio de las notas de las tareas.\nLas tareas se entregan dos clases después de haber sido asignadas.\nSe evaluará lo siguiente:\nEl código funciona (4 puntos): Si el código pedido hace lo que deberíacumplir sin errores en ningún caso, la estudiante obtendrá los 4 puntos. Si existen casos especiales en los cuales el código no funciona, pero funciona en la mayoría de los casos, la estudiante obtendrá 3 puntos. Si el código no funciona pero el error es menor (algún detalle de sintaxis, alguna variable mal nombrada, alguna excepción de Python difícil de prever), el estudiante obtendrá 2 puntos. Si el código no funciona el estudiante obtendrá 1 punto. Si no entrega la tarea el estudiante obtendrá 0 puntos.\nEl código es legible (+2 puntos): Si el código está comentado en cada paso el estudiante obtendrá +1 punto. Si el código es fácil de entender, está bien organizado, las variables tienen nombres que corresponden a lo que representan la estudiante obtendrá +1 punto.\nLa nota de la tarea = # de puntos + 1.\nLa otra mitad de la nota será el promedio de tres pruebas realizadas a lo largo del semestre. Las pruebas consisten en ejercicios sencillos basados en lo visto en clase y en las tareas.\nLas siguientes son las fechas de las pruebas:\nPrueba: 10 de septiembre Prueba: 5 de noviembre Prueba: 25 de noviembre Recuperativa: 26 de noviembre Examen: 10 de diciembre\n\n\n\nLos estudiantes no están obligados a ir a las ayudantías, pero obviamente quien asista estará mejor preparado para las pruebas y los exámenes porque sabrá cuáles son los problemas que entran. Las tareas se entregarán en formato electrónico por medio de la plataforma GitHub. Se usa esta en vez del Aula Virtual dado su uso extenso en el mundo profesional.\nHágale preguntas al profesor a la dirección jorge.norena@pucv.cl, o en el horario de atención. Hacer preguntas ayuda a aprender y hace más ameno el trabajo del profesor. La clase empieza puntual si hay al menos un estudiante presente, por respeto a los que llegan a tiempo.\n\n\n\nPOR FAVOR HAGAN PREGUNTAS DURANTE LA CLASE, LAS AYUDANTÍAS, POR CORREO ELECTRÓNICO, EN LOS HORARIOS DE ATENCIÓN Y POR CUALQUIER OTRO MEDIO QUE PUEDA.\nSi quiere conversar hágalo por chat en su teléfono para que el ruido no distraiga a los demás. Use el teléfono para tomarle fotos a la pizarra cuando quiera recordar algo.\n\n\n\nPuede en cualquier momento hacer preguntas por correo electrónico.\nCorreo electrónico profesor: jorge.norena@pucv.cl Correo electrónico de la ayudante:\nTambién puede pasar por la oficina del profesor en cualquier momento.\nEl horario de atención reservado es una hora después de cada clase."
  },
  {
    "objectID": "plan.html#motivación",
    "href": "plan.html#motivación",
    "title": "Métodos Numéricos y Probabilidades",
    "section": "",
    "text": "Las (los) físicas (os) siempre han llevado la punta de lanza del desarrollo tecnológico. Desde la revolución industrial hasta el desarrollo de la computación cuántica, los (las) físicos (as) han tenido un manejo profundo de la tecnología que les permite hacer nuevos descubrimientos o inventos. Esto es aún más cierto en el siglo XXI, en el cual la mayoría de las (los) licenciadas (os) en física de los países de alto desarrollo tecnológico trabajan en el sector privado creando y mejorando las herramientas informáticas, financieras y estadísticas que usamos todos los días. Esto se debe a que a lo largo de sus carreras adquieren un conocimiento íntimo de la tecnología de punta al intentar aplicarla a problemas científicos abiertos.\nSon muy pocos los problemas que admiten una solución sencilla de lápiz y papel. Para la mayoría de nuevos desarrollos es necesario usar el computador. Esto es verdad tanto para analizar los datos obtenidos en los experimentos, como para resolver las ecuaciones diferenciales que aparecen en la física teórica. Incluso quienes hacen un trabajo puramente analítico se apoyan en herramientas computacionales para los cálculos que son cada vez más complejos.\nEn este curso aprenderemos a usar las herramientas numéricas disponibles para atacar problemas físicos y al hacerlo aprenderemos a usar plataformas, paquetes y lenguajes de programación modernos."
  },
  {
    "objectID": "plan.html#lecturas-sugeridas",
    "href": "plan.html#lecturas-sugeridas",
    "title": "Métodos Numéricos y Probabilidades",
    "section": "",
    "text": "R. L. Burden, D. J. Faires, A. M. Burden, “Numerical Analysis”, 10ma edición, Cengage Learning, 2016 (NA)\nT. A. Driscoll, R. J. Braun, “Funamentals of Numerical Computation”, 2da edición, SIAM, 2022 (FNC)\nB. R. Martin, “Statistics for Physical Sciences”. Elsevier, 2012 (S)\nA. B. Downey, “Think Python,” 2da edición, O’Reilly, 2015. (TP)"
  },
  {
    "objectID": "plan.html#programa",
    "href": "plan.html#programa",
    "title": "Métodos Numéricos y Probabilidades",
    "section": "",
    "text": "Se indican las fechas y temas de cada clase, junto con las secciones de los libros a las que corresponden.\n1- Introducción\n\n¿Cómo funciona una CPU?, 7 de agosto.\nRepaso de Python, 12 de agosto.\nNumpy y arrays, 14 de agosto.\nRepresentación binaria de números decimales, número de condicionamiento 19 de agosto\nAlgoritmos y estabilidad 21 de agosto\n\n2- Probabilidades\n\nPropiedades básicas de la probabilidad, 26 de agosto\nDistribuciones de probabilidad, 28 de agosto\nVarias variables aleatorias, 2 de septiembre\nSuma de muchas variables aleatorias y teorema central del límite, 4 de septiembre\nInformación y entropía, 9 de septiembre\n\nPrueba: 23 de septiembre\n3- Cálculo numérico\n\nSolución de sistemas de ecuaciones lineales: Inversión de matrices, 11 de septiembre\nBúsqueda de raíces: Métodos de bisección y Newton, 25 de septiembre\nInterpolación, 30 de septiembre\nDerivadas numéricas y autodiferenciación, 2 de octubre\nIntegración numérica simple y adaptativa, 7 de octubre\nIntegración numérica por método de Gauss, 9 de octubre\n\nPrueba: 16 de octubre\n4- Solución numérica de ecuaciones diferenciales ordinarias\n\nMétodos de Euler y Taylor, 14 de octubre\nMétodo de Runge Kutta, 21 de octubre\nMétodo de Runge Kutta adaptativo, 23 de octubre\nMétodos de múltiples pasos y método de Adams, 4 de noviembre\nSistemas de ecuaciones diferenciales y ecuaciones de alto orden, 6 de noviembre\n\nPrueba: 13 de noviembre\n5- Optimización y otros algoritmos importantes\n\nAjuste de curvas y bondad de ajuste, 11 de noviembre\nOptimización por descenso de gradiente, 18 de noviembre\nIntroducción a las redes neuronales, 20 de noviembre\nMétodos de Monte Carlo y/o transformada rápida de Fourier, 25 de noviembre\n\nRecuperativa: 27 de noviembre Examen: Definido por Instituto"
  },
  {
    "objectID": "plan.html#evaluación",
    "href": "plan.html#evaluación",
    "title": "Métodos Numéricos y Probabilidades",
    "section": "",
    "text": "La evaluación se hará por tareas y pruebas.\nAl final de cada clase habrán 5 tareas para un total de 10 tareas cada dos clases. De estas 10 tareas se le asignará de forma aleatoria una tarea a cada estudiante. De esta manera el estudiante deberá entregar aproximadamente 11 tareas a lo largo del curso. El 50% de la nota final es el promedio de las notas de las tareas.\nLas tareas se entregan dos clases después de haber sido asignadas.\nSe evaluará lo siguiente:\nEl código funciona (4 puntos): Si el código pedido hace lo que deberíacumplir sin errores en ningún caso, la estudiante obtendrá los 4 puntos. Si existen casos especiales en los cuales el código no funciona, pero funciona en la mayoría de los casos, la estudiante obtendrá 3 puntos. Si el código no funciona pero el error es menor (algún detalle de sintaxis, alguna variable mal nombrada, alguna excepción de Python difícil de prever), el estudiante obtendrá 2 puntos. Si el código no funciona el estudiante obtendrá 1 punto. Si no entrega la tarea el estudiante obtendrá 0 puntos.\nEl código es legible (+2 puntos): Si el código está comentado en cada paso el estudiante obtendrá +1 punto. Si el código es fácil de entender, está bien organizado, las variables tienen nombres que corresponden a lo que representan la estudiante obtendrá +1 punto.\nLa nota de la tarea = # de puntos + 1.\nLa otra mitad de la nota será el promedio de tres pruebas realizadas a lo largo del semestre. Las pruebas consisten en ejercicios sencillos basados en lo visto en clase y en las tareas.\nLas siguientes son las fechas de las pruebas:\nPrueba: 10 de septiembre Prueba: 5 de noviembre Prueba: 25 de noviembre Recuperativa: 26 de noviembre Examen: 10 de diciembre"
  },
  {
    "objectID": "plan.html#normas",
    "href": "plan.html#normas",
    "title": "Métodos Numéricos y Probabilidades",
    "section": "",
    "text": "Los estudiantes no están obligados a ir a las ayudantías, pero obviamente quien asista estará mejor preparado para las pruebas y los exámenes porque sabrá cuáles son los problemas que entran. Las tareas se entregarán en formato electrónico por medio de la plataforma GitHub. Se usa esta en vez del Aula Virtual dado su uso extenso en el mundo profesional.\nHágale preguntas al profesor a la dirección jorge.norena@pucv.cl, o en el horario de atención. Hacer preguntas ayuda a aprender y hace más ameno el trabajo del profesor. La clase empieza puntual si hay al menos un estudiante presente, por respeto a los que llegan a tiempo."
  },
  {
    "objectID": "plan.html#recomendaciones",
    "href": "plan.html#recomendaciones",
    "title": "Métodos Numéricos y Probabilidades",
    "section": "",
    "text": "POR FAVOR HAGAN PREGUNTAS DURANTE LA CLASE, LAS AYUDANTÍAS, POR CORREO ELECTRÓNICO, EN LOS HORARIOS DE ATENCIÓN Y POR CUALQUIER OTRO MEDIO QUE PUEDA.\nSi quiere conversar hágalo por chat en su teléfono para que el ruido no distraiga a los demás. Use el teléfono para tomarle fotos a la pizarra cuando quiera recordar algo."
  },
  {
    "objectID": "plan.html#horarios-de-atención-y-contacto",
    "href": "plan.html#horarios-de-atención-y-contacto",
    "title": "Métodos Numéricos y Probabilidades",
    "section": "",
    "text": "Puede en cualquier momento hacer preguntas por correo electrónico.\nCorreo electrónico profesor: jorge.norena@pucv.cl Correo electrónico de la ayudante:\nTambién puede pasar por la oficina del profesor en cualquier momento.\nEl horario de atención reservado es una hora después de cada clase."
  },
  {
    "objectID": "01_funcionamiento_cpu.html",
    "href": "01_funcionamiento_cpu.html",
    "title": "¿Cómo funciona un computador?",
    "section": "",
    "text": "Lo que hace un computador es mover un montón de electrones. Para entender el computador, debemos entender cómo se mueven estas partículas en diferentes materiales. No entraremos en muchos detalles, pero necesitamos un par de hechos\n\nLos portadores de carga son los electrones: Los protones también tienen carga, pero son mucho más pesados y difíciles de mover. Las corrientes eléctricas consisten en electrones débilmente ligados que se mueven de un lugar a otro.\nEl principio de exclusión de Pauli: Dos electrones no pueden tener el mismo estado. Si tenemos un átomo completamente ionizado (sin electrones) y le agregamos un electrón, éste tenderá a ocupar el estado de mínima energía. Al llegar un segundo electrón, no puede estar en el mismo estado, así que ocupa otro. A medida que llenamos el átomo de electrones, estos ocuparán estados de energías más altas (menos ligados al átomo).\nAl poner muchos átomos juntos en un material, los niveles de energía se mezclan formando bandas de energía. Estas bandas pueden acomodar muchos electrones. La energía máxima ocupada por un electrón cuando llenamos el material ignorando los efectos de la temperatura se llama energía de Fermi. Las bandas de energía por encima de las de Fermi están vacías a bajas temperaturas.\nSi la energía de Fermi cae en el medio de una banda de energía, el material es un conductor. Los electrones pueden adquirir un poco de energía cinética sin salirse de la banda y así moverse por el material.\nSi la energía de Fermi cae en la separación de dos bandas, el material es un aislante. Si un electrón quiere moverse, debe adquirir un poco de energía cinética, pero no puede ya que su banda está llena. A ese electrón le queda difícil adquirir suficiente energía cinética para pasar de la última banda llena a la primera banda vacía.\n\n\n\nUn semiconductor es un aislante pero tal que la última banda llena está muy cerca de la primera banda vacía.\nNormalmente los semiconductores se dopan. Es decir, se les agrega una pequeña cantidad de átomos diferentes a los del material, pero que se encuentran cercanos en la tabla periódica.\nEsto quiere decir que esos átomos de dopaje les sobra o les falta un electrón respecto a los del material. Cuando les falta un electrón, se dice que son de tipo p, cuando les sobra uno son de tipo n.\nA continuación vemos el estado de las bandas de conducción para diferentes tipos de materiales. Cuando una banda tiene una región semillena (gris), esta puede conducir electricidad fácilmente. (Fuente: Wikipedia)\n\n\n¿Para qué sirve eso? Una aplicación sencilla son los diodos. Estos consisten en una juntura de un semiconductor tipo p con uno de tipo n. Los electrones sobrantes en el tipo n pueden viajar hacia el tipo p para llenar los huecos presentes en este. Pero si se aplica un voltaje en la dirección opuesta, no puede pasar corriente. El diodo deja pasar corriente en una sola dirección.\nTambién sirven para hacer transistores, que son las componentes fundamentales del computador.",
    "crumbs": [
      "Inicio",
      "Unidad 1: Introducción",
      "Funcionamiento de la CPU"
    ]
  },
  {
    "objectID": "01_funcionamiento_cpu.html#semiconductores",
    "href": "01_funcionamiento_cpu.html#semiconductores",
    "title": "¿Cómo funciona un computador?",
    "section": "",
    "text": "Un semiconductor es un aislante pero tal que la última banda llena está muy cerca de la primera banda vacía.\nNormalmente los semiconductores se dopan. Es decir, se les agrega una pequeña cantidad de átomos diferentes a los del material, pero que se encuentran cercanos en la tabla periódica.\nEsto quiere decir que esos átomos de dopaje les sobra o les falta un electrón respecto a los del material. Cuando les falta un electrón, se dice que son de tipo p, cuando les sobra uno son de tipo n.\nA continuación vemos el estado de las bandas de conducción para diferentes tipos de materiales. Cuando una banda tiene una región semillena (gris), esta puede conducir electricidad fácilmente. (Fuente: Wikipedia)\n\n\n¿Para qué sirve eso? Una aplicación sencilla son los diodos. Estos consisten en una juntura de un semiconductor tipo p con uno de tipo n. Los electrones sobrantes en el tipo n pueden viajar hacia el tipo p para llenar los huecos presentes en este. Pero si se aplica un voltaje en la dirección opuesta, no puede pasar corriente. El diodo deja pasar corriente en una sola dirección.\nTambién sirven para hacer transistores, que son las componentes fundamentales del computador.",
    "crumbs": [
      "Inicio",
      "Unidad 1: Introducción",
      "Funcionamiento de la CPU"
    ]
  },
  {
    "objectID": "01_funcionamiento_cpu.html#qué-es-un-transistor",
    "href": "01_funcionamiento_cpu.html#qué-es-un-transistor",
    "title": "¿Cómo funciona un computador?",
    "section": "¿Qué es un transistor?",
    "text": "¿Qué es un transistor?\nUn transistor es un componente electrónico que tiene tres “cables”. Para nuestros propósitos aquí podemos pensar en él como un switch: Cuando el voltaje en un cable supera un cierto valor (Típicamente \\(5\\,\\text{V}\\)), puede pasar corriente entre los otros dos cables.",
    "crumbs": [
      "Inicio",
      "Unidad 1: Introducción",
      "Funcionamiento de la CPU"
    ]
  },
  {
    "objectID": "01_funcionamiento_cpu.html#cómo-funciona-físicamente",
    "href": "01_funcionamiento_cpu.html#cómo-funciona-físicamente",
    "title": "¿Cómo funciona un computador?",
    "section": "¿Cómo funciona físicamente?",
    "text": "¿Cómo funciona físicamente?\nEl transistor más usado es el de efecto campo. Consiste en semiconductores de tipo n y p en la siguiente configuración:\nHay una diferencia de potencial entre el lado izquierdo y el derecho, pero la corriente no puede pasar debido al mismo efecto que en el díodo.\nPero si en el cable del medio se aplica un potencial positivo que atrae electrones, eso elimina los huecos del semiconductor tipo p y crea un canal por el cual puede fluir la corriente.\nEste es un diagrama del transistor de efecto de campo (Fuente: Wikipedia):\n\n\nEl símbolo del transistor es el siguiente (Fuente: Wikipedia)\n\n\nCuando hay voltaje en la compuerta, la corriente puede fluir entre la fuente y el drenaje.",
    "crumbs": [
      "Inicio",
      "Unidad 1: Introducción",
      "Funcionamiento de la CPU"
    ]
  },
  {
    "objectID": "01_funcionamiento_cpu.html#compuerta-and",
    "href": "01_funcionamiento_cpu.html#compuerta-and",
    "title": "¿Cómo funciona un computador?",
    "section": "Compuerta AND",
    "text": "Compuerta AND\nEste es el diagrama de la compuerta que implementa la operación booleana y (Fuente: Wikipedia)\n\n\nRepresenta la operación \\(A\\wedge B = Q\\).\nSe puede realizar mediante transistores de la siguiente manera\n\n\nFuente: http://hyperphysics.phy-astr.gsu.edu/hbase/Electronic/trangate.html",
    "crumbs": [
      "Inicio",
      "Unidad 1: Introducción",
      "Funcionamiento de la CPU"
    ]
  },
  {
    "objectID": "01_funcionamiento_cpu.html#compuerta-or",
    "href": "01_funcionamiento_cpu.html#compuerta-or",
    "title": "¿Cómo funciona un computador?",
    "section": "Compuerta OR",
    "text": "Compuerta OR\nEste es el diagrama de la compuerta que implementa la operación booleana o (Fuente: Wikipedia)\n\n\nRepresenta la operación \\(A\\vee B = Q\\).\nSe puede realizar mediante transistores de la siguiente manera\n\n\nFuente: http://hyperphysics.phy-astr.gsu.edu/hbase/Electronic/trangate.html",
    "crumbs": [
      "Inicio",
      "Unidad 1: Introducción",
      "Funcionamiento de la CPU"
    ]
  },
  {
    "objectID": "01_funcionamiento_cpu.html#compuerta-nand",
    "href": "01_funcionamiento_cpu.html#compuerta-nand",
    "title": "¿Cómo funciona un computador?",
    "section": "Compuerta NAND",
    "text": "Compuerta NAND\nEste es el diagrama de la compuerta que implementa la operación booleana no y (Fuente: Wikipedia)\n\n\nRepresenta la operación \\(\\neg(A\\wedge B) = Q\\).\nSe puede realizar mediante transistores de la siguiente manera\n\n\nFuente: http://hyperphysics.phy-astr.gsu.edu/hbase/Electronic/trangate.html\nEsta compuerta es muy importante ya que es una compuerta universal: Cualquier otra compuerta se puede construir combinando NANDs. Por ejemplo implementa la compuerta NOT mediante \\(\\neg A = \\neg(A \\wedge A)\\).",
    "crumbs": [
      "Inicio",
      "Unidad 1: Introducción",
      "Funcionamiento de la CPU"
    ]
  },
  {
    "objectID": "01_funcionamiento_cpu.html#compuerta-xor",
    "href": "01_funcionamiento_cpu.html#compuerta-xor",
    "title": "¿Cómo funciona un computador?",
    "section": "Compuerta XOR",
    "text": "Compuerta XOR\nEste es el diagrama de la compuerta que implementa la operación booleana no exclusivo (Fuente: Wikipedia)\n\n\nRepresenta la operación \\(A \\oplus B = Q\\), que tiene la siguiente tabla de verdad\n\n\n\nA\nB\nQ\n\n\n\n\n0\n0\n0\n\n\n0\n1\n1\n\n\n1\n0\n1\n\n\n1\n1\n0\n\n\n\nComo realizarla con transistores se deja como un ejercicio opcional para el estudiante.\nEsta compuerta corresponde al uso corriente de la palabra “o” en español. Es decir, es verdad cuando uno u otro es verdad, pero no cuando ambos lo son.\nSerá importante en la siguiente sección.",
    "crumbs": [
      "Inicio",
      "Unidad 1: Introducción",
      "Funcionamiento de la CPU"
    ]
  },
  {
    "objectID": "01_funcionamiento_cpu.html#binarios",
    "href": "01_funcionamiento_cpu.html#binarios",
    "title": "¿Cómo funciona un computador?",
    "section": "Binarios",
    "text": "Binarios\nEl computador combina \\(1\\) y \\(0\\) para formar números. Es decir que usa una base binaria.\nEstamos acostumbrados a la base decimal en la cual los dígitos van de \\(0\\) a \\(9\\). Cuando llegamos a un número mayor que \\(9\\), necesitamos un nuevo dígito que representa las decenas y así sucesivamente.\nEn la base binaria, tenemos sólo los dígitos \\(0\\) y \\(1\\) que se pueden trabajar como voltajes en los circuitos que vimos arriba. Esto quiere decir que el número \\(10\\) en binario representa el número \\(2\\) en decimal. Por el contrario, el número \\(10\\) en decimal se escribe \\(1010\\) en binario.\nSe recomienda que la estudiante intente escribir por su cuenta algunos números más en base binaria.",
    "crumbs": [
      "Inicio",
      "Unidad 1: Introducción",
      "Funcionamiento de la CPU"
    ]
  },
  {
    "objectID": "01_funcionamiento_cpu.html#la-media-suma",
    "href": "01_funcionamiento_cpu.html#la-media-suma",
    "title": "¿Cómo funciona un computador?",
    "section": "La media suma",
    "text": "La media suma\nEmpezamos por el elemento más sencillo: Sumar dos números enteros positivos binarios de un solo dígito.\nPara sumar los números \\(A\\) y \\(B\\) guardamos el resultado en \\(S\\) que también tiene un solo dígito. Si el resultado tiene más de un dígito, el dígito adicional “se lleva” guardándolo en \\(C\\). De esta manera\n\n\n\nA\nB\nS\nC\n\n\n\n\n0\n0\n0\n0\n\n\n0\n1\n1\n0\n\n\n1\n0\n1\n0\n\n\n1\n1\n0\n1\n\n\n\nNote que \\(S = A\\oplus B\\) y que \\(C = A \\wedge B\\), tal que esto se puede lograr con el siguiente circuito (Fuente: Wikipedia)\n\n\nA un chip que realiza esto lo representamos mediante",
    "crumbs": [
      "Inicio",
      "Unidad 1: Introducción",
      "Funcionamiento de la CPU"
    ]
  },
  {
    "objectID": "01_funcionamiento_cpu.html#sumador-completo",
    "href": "01_funcionamiento_cpu.html#sumador-completo",
    "title": "¿Cómo funciona un computador?",
    "section": "Sumador completo",
    "text": "Sumador completo\nAhora nos preguntamos qué pasa si estamos sumando dos dígitos binarios, pero además queremos sumar un tercero que se “lleva” de la suma de dígitos anteriores. Ahora tenemos tres binarios \\(A\\), \\(B\\), \\(C_{in}\\) con la siguiente tabla de verdad\n\n\n\n\\(A\\)\n\\(B\\)\n\\(C_{in}\\)\n\\(S\\)\n\\(C_{out}\\)\n\n\n\n\n0\n0\n0\n0\n0\n\n\n0\n0\n1\n1\n0\n\n\n0\n1\n0\n1\n0\n\n\n0\n1\n1\n0\n1\n\n\n1\n0\n0\n1\n0\n\n\n1\n0\n1\n0\n1\n\n\n1\n1\n0\n0\n1\n\n\n1\n1\n1\n1\n1\n\n\n\nUn posible circuito que lo logra es (fuente: Wikipedia)\n\n\nUn chip que realiza esto lo podemos denotar",
    "crumbs": [
      "Inicio",
      "Unidad 1: Introducción",
      "Funcionamiento de la CPU"
    ]
  },
  {
    "objectID": "01_funcionamiento_cpu.html#suma-de-varios-dígitos",
    "href": "01_funcionamiento_cpu.html#suma-de-varios-dígitos",
    "title": "¿Cómo funciona un computador?",
    "section": "Suma de varios dígitos",
    "text": "Suma de varios dígitos\nAhora podemos encadenar varios chips de estos para sumar un número de cuatro bits (cuatro dígitos binarios)\n\n\nEste es sólo un ejemplo de cómo a partir de semiconductores podemos realizar operaciones aritméticas.\nLos procesadores modernos trabajan con números de 64 bits, realizando operaciones como esta miles de millones de veces por segundo. Obviamente no usan solamente números enteros positivos, también usan números decimales (llamados de punto flotante) que estudiaremos en un par de clases.",
    "crumbs": [
      "Inicio",
      "Unidad 1: Introducción",
      "Funcionamiento de la CPU"
    ]
  }
]